{"ast":null,"code":"var _jsxFileName = \"/Users/paulinadziasek/Desktop/refactor/refactor/src/App.js\";\nimport React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport './App.css';\nconst Input = styled.input`\n    margin: 20px 0 20px 0;\n    font-size: 20px;\n`;\nconst euroCurrency = 4.43;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.parseCurrency = e => {\n      const priceComma = e.target.value.replace('.', ',');\n      const valueFloat = parseFloat(e.target.value);\n      this.setState({\n        currentValue: valueFloat * euroCurrency\n      });\n    };\n\n    this.state = {\n      currentValue: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n      pattern: \"[0-9]+([\\\\.,][0-9]+)?\",\n      type: \"text\",\n      onChange: this.parseCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, this.state.currentValue));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paulinadziasek/Desktop/refactor/refactor/src/App.js"],"names":["React","Component","styled","css","Input","input","euroCurrency","App","constructor","props","parseCurrency","e","priceComma","target","value","replace","valueFloat","parseFloat","setState","currentValue","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAO,WAAP;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,KAAM;;;CAA3B;AAKA,MAAMC,YAAY,GAAG,IAArB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACC,SAAxB,CAAkC;AAC9BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,aAPmB,GAOFC,CAAD,IAAO;AACnB,YAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,GAAvB,EAA4B,GAA5B,CAAnB;AACA,YAAMC,UAAU,GAAGC,UAAU,CAACN,CAAC,CAACE,MAAF,CAASC,KAAV,CAA7B;AACA,WAAKI,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEH,UAAU,GAAGV;AADjB,OAAd;AAGH,KAbkB;;AAEf,SAAKc,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAUDE,EAAAA,MAAM,GAAG;AACL,wBACI,uDACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAsC,MAAA,IAAI,EAAC,MAA3C;AAAkD,MAAA,QAAQ,EAAE,KAAKX,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKU,KAAL,CAAWD,YAAjB,CAFJ,CADJ;AAMH;;AAvB6B;;AA0BlC,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport './App.css';\n\nconst Input = styled.input`\n    margin: 20px 0 20px 0;\n    font-size: 20px;\n`\n\nconst euroCurrency = 4.43;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentValue: ''\n        }\n    }\n\n    parseCurrency = (e) => {\n        const priceComma = e.target.value.replace('.', ',');\n        const valueFloat = parseFloat(e.target.value);\n        this.setState({\n            currentValue: valueFloat * euroCurrency\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Input pattern=\"[0-9]+([\\.,][0-9]+)?\" type=\"text\" onChange={this.parseCurrency} />\n                <div>{this.state.currentValue}</div>\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}